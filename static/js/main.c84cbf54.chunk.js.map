{"version":3,"sources":["Components/Box/Box.js","Components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","useState","text","setText","className","onClick","currentState","changeTurn","row","col","board","Game","turn","setTurn","winningtext","setWinningText","console","log","winner","i","length","el1","el2","el3","d1","d2","d3","p1","p2","p3","checkforwin","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEe,SAASA,EAAIC,GAExB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OAEK,yBAAKC,UAAU,MAAMC,QAR1B,WACc,KAAPH,IACCC,EAAQH,EAAMM,cACdN,EAAMO,WAAWP,EAAMQ,IAAIR,EAAMS,QAKOP,GCVpD,IAAMQ,EAAM,CAAC,GAAG,GAAG,IAEJ,SAASC,IAEpB,MAAwBV,mBAAS,KAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAoCZ,mBAAS,IAA7C,mBAAMa,EAAN,KAAmBC,EAAnB,KAGA,SAASR,EAAWC,EAAIC,GACpBC,EAAMF,GAAKC,GAAMG,EACjBC,GAAQ,SAAAD,GAAI,MAAS,MAAPA,EAAW,IAAI,OAC7BI,QAAQC,IAAIP,GACX,IAAMQ,EAWX,WAGI,IAAI,IAAIC,EAAE,EAAGA,EAAET,EAAMU,OAAOD,IAAI,CAC5B,IAAMX,EAAKE,EAAMS,GACjB,GAAIX,EAAI,KAAKA,EAAI,IAAMA,EAAI,KAAKA,EAAI,IAAMA,EAAI,GAC1C,OAAOA,EAAI,GAKnB,IAAI,IAAIW,EAAE,EAAGA,EAAET,EAAMU,OAAOD,IAAI,CAC5B,IAAME,EAAIX,EAAM,GAAGS,GACbG,EAAIZ,EAAM,GAAGS,GACbI,EAAIb,EAAM,GAAGS,GACnB,GAAGE,IAAMC,GAAOA,IAAMC,GAAOF,EACzB,OAAOA,EAKf,IAAMG,EAAId,EAAM,GAAG,GACbe,EAAGf,EAAM,GAAG,GACZgB,EAAIhB,EAAM,GAAG,GACnB,GAAIc,IAAKC,GAAMA,IAAKC,GAAMF,EACtB,OAAOA,EAEX,IAAMG,EAAGjB,EAAM,GAAG,GACZkB,EAAGlB,EAAM,GAAG,GACZmB,EAAGnB,EAAM,GAAG,GAClB,QAAIiB,IAAKC,GAAMA,IAAKC,IAAMF,IACfA,EA1CGG,GACbd,QAAQC,IAAIC,GAEPA,GAGDH,EAAgBG,EAAU,QA0CnC,OACI,yBAAKa,GAAG,QACJ,yBAAKA,GAAG,gBAAgBjB,GACxB,yBAAKV,UAAU,OACX,kBAACL,EAAD,CAAKS,IAAK,EAAIC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACtD,kBAACR,EAAD,CAAKS,IAAK,EAAGC,IAAK,EAAIH,aAAcM,EAAML,WAAYA,IACtD,kBAACR,EAAD,CAAKS,IAAK,EAAIC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,KAG1D,yBAAKH,UAAU,OACX,kBAACL,EAAD,CAAKS,IAAK,EAAGC,IAAK,EAAIH,aAAcM,EAAML,WAAYA,IACtD,kBAACR,EAAD,CAAKS,IAAK,EAAGC,IAAK,EAAIH,aAAcM,EAAML,WAAYA,IACtD,kBAACR,EAAD,CAAKS,IAAK,EAAGC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,KAGzD,yBAAKH,UAAU,OACX,kBAACL,EAAD,CAAKS,IAAK,EAAGC,IAAK,EAAIH,aAAcM,EAAML,WAAYA,IACtD,kBAACR,EAAD,CAAKS,IAAK,EAAIC,IAAK,EAAGH,aAAcM,EAAML,WAAYA,IACtD,kBAACR,EAAD,CAAKS,IAAK,EAAGC,IAAK,EAAIH,aAAcM,EAAML,WAAYA,MC3EvDyB,MALf,WACE,OACE,kBAACrB,EAAD,OCQWsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c84cbf54.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './style.css'\nexport default function Box(props) {\n    \n    const [text, setText] = useState('')\n\n    function toggleText(){\n        if(text===''){\n            setText(props.currentState)\n            props.changeTurn(props.row,props.col);\n        }\n    }\n    return (\n       \n         <div className=\"box\" onClick={toggleText}>{text}</div>\n       \n    )\n}","import React,{useState} from 'react'\nimport './Style.css' \nimport Box from './Box/Box'\n\nconst board=[[],[],[]];\n\nexport default function Game() {\n      \n    const [turn, setTurn] = useState('X')\n    const[winningtext, setWinningText]= useState('')\n\n    \n    function changeTurn(row,col){\n        board[row][col]= turn\n        setTurn(turn=>turn==='X'?'O':'X')\n        console.log(board)\n         const winner=checkforwin();\n         console.log(winner)\n\n         if (!winner){\n             //nothing\n         } else{\n             setWinningText( winner  + 'won!')\n         } \n         \n    }\n    \n    function checkforwin(){\n\n        //row test\n        for(let i=0; i<board.length;i++){\n            const row =board[i]\n            if (row[0]===row[1] && row[1]===row[2] && row[0]){\n                return row[0]\n            }\n        }\n\n        //column test\n        for(let i=0; i<board.length;i++){\n            const el1=board[0][i]\n            const el2=board[1][i]\n            const el3=board[2][i]\n            if(el1===el2 && el2===el3 && el1){\n                return el1\n            }\n        }\n\n        //Diagonal test\n        const d1= board[0][0]\n        const d2=board[1][1]\n        const d3 =board[2][2]\n        if (d1===d2 && d2===d3 && d1){\n            return d1\n        }\n        const p1=board[0][2]\n        const p2=board[1][1]\n        const p3=board[2][0]\n        if (p1===p2 && p2===p3 && p1){\n            return p1\n        }\n        else{\n        return false\n        }\n    }\n    return (\n        <div id=\"Game\">\n            <div id=\"winning-text\">{winningtext}</div>\n            <div className=\"row\">\n                <Box row={0}  col={0} currentState={turn} changeTurn={changeTurn}/>\n                <Box row={0} col={1}  currentState={turn} changeTurn={changeTurn}/>\n                <Box row={0}  col={2} currentState={turn} changeTurn={changeTurn}/>\n            </div>\n\n            <div className=\"row\">\n                <Box row={1} col={0}  currentState={turn} changeTurn={changeTurn}/>\n                <Box row={1} col={1}  currentState={turn} changeTurn={changeTurn}/>\n                <Box row={1} col={2} currentState={turn} changeTurn={changeTurn}/>\n            </div>\n\n            <div className=\"row\">\n                <Box row={2} col={0}  currentState={turn} changeTurn={changeTurn}/>\n                <Box row={2}  col={1} currentState={turn} changeTurn={changeTurn}/>\n                <Box row={2} col={2}  currentState={turn} changeTurn={changeTurn}/>\n            </div>\n        </div>\n     )   \n    \n}\n","import React from 'react'\nimport Game from './Components/Game'\nfunction App(){\n  return(\n    <Game/>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}